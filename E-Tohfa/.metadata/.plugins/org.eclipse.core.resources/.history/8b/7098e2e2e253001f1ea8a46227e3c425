package com.app.service;

import java.util.List;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.app.custom_exceptions.ApiException;
import com.app.dao.AddressDao;
import com.app.dao.UserDao;
import com.app.dto.AddressDTO;
import com.app.entity.Address;

@Service
@Transactional
public class AddressServiceImpl implements AddressService {

	@Autowired
	private AddressDao addressDao;

	@Autowired
	private UserDao userDao;

	@Autowired
	private ModelMapper modelMapper;

	@Override
	public AddressDTO createAddress(AddressDTO addressDTO) {

		String streetNo = addressDTO.getStreetNo();
		String locality = addressDTO.getLocality();
		String city = addressDTO.getCity();
		String state = addressDTO.getState();
		String pincode = addressDTO.getPincode();
		String buildingName = addressDTO.getBuildingName();

		Address addressFromDb = addressDao.findByStreetNoAndLocalityAndCityAndStateAndPincodeAndBuildingName(streetNo,
				locality, city, state, pincode, buildingName);
		if (addressFromDb != null) {
			throw new ApiException("Address already exists with addressId: " + addressFromDb.getAddressId());
		}

		Address address = modelMapper.map(addressDTO, Address.class);

		Address savedAddress = addressDao.save(address);

		return modelMapper.map(savedAddress, AddressDTO.class);
	}

	@Override
	public List<AddressDTO> getAddresses() {

		return null;
	}

	@Override
	public AddressDTO getAddress(Long addressId) {

		return null;
	}

	@Override
	public AddressDTO updateAddress(Long addressId, Address address) {

		return null;
	}

	@Override
	public String deleteAddress(Long addressId) {

		return null;
	}

}
